<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My Second Blog</title>
    <url>/2020/04/19/My-Second-Blog/</url>
    <content><![CDATA[<h3 id="在下刘某的第一个博客"><a href="#在下刘某的第一个博客" class="headerlink" title="在下刘某的第一个博客"></a>在下刘某的第一个博客</h3><ul>
<li>听说</li>
<li>这是</li>
<li>列表</li>
</ul>
<blockquote>
<p>听说这是引用<br>那就再来一段</p>
</blockquote>
<p> <em>这是文本框?</em><br> <strong>这是加粗?</strong><br> <strong><em>这是斜体+加粗</em></strong><br><a href="https://baidu.com" target="_blank" rel="noopener">直达百度</a></p>
<hr>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">"hello world"</span>)!</span><br></pre></td></tr></table></figure>
<p><img src="./snapshot.png" alt="snapshot"></p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> conf:<span class="type">SparkConf</span> = <span class="keyword">new</span> <span class="type">SparkConf</span>().setMaster(<span class="string">"local[*]"</span>).setAppName(<span class="string">"I'm so sad"</span>)</span><br><span class="line"><span class="keyword">val</span> sc:<span class="type">SparkContext</span> = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf);</span><br><span class="line">sc.textFile(<span class="string">"./input/wordcount.txt"</span>).flatmap(_.split(<span class="string">" "</span>)).map(v=&gt;(v,<span class="number">1</span>)).reduceByKey(_+_).collect().foreach(println)</span><br><span class="line">sc.stop()</span><br><span class="line">println(<span class="string">s"我现在好郁闷，钱有没钱，工作又没工作，烦！"</span>);</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Desire</title>
    <url>/2020/04/22/Desire/</url>
    <content><![CDATA[<h3 id="真的是有趣"><a href="#真的是有趣" class="headerlink" title="真的是有趣"></a>真的是有趣</h3><blockquote>
<p>此处不留爷，自有留爷处！</p>
</blockquote>
<p> <strong><em>我不知道最终的结果是什么，但我知道，不应该再这样下去了</em></strong> </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="string">"To tree, never say never!"</span>);</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="没有什么东西可以把你打败的对吧？每次经历，都是一次磨炼，让你成为更好的自己！"><a href="#没有什么东西可以把你打败的对吧？每次经历，都是一次磨炼，让你成为更好的自己！" class="headerlink" title="没有什么东西可以把你打败的对吧？每次经历，都是一次磨炼，让你成为更好的自己！"></a>没有什么东西可以把你打败的对吧？每次经历，都是一次磨炼，让你成为更好的自己！</h4>]]></content>
      <tags>
        <tag>consciousness feeling</tag>
      </tags>
  </entry>
  <entry>
    <title>04-28历程</title>
    <url>/2020/04/28/04-28%E5%8E%86%E7%A8%8B/</url>
    <content><![CDATA[<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> conf = <span class="keyword">new</span> <span class="type">SparkConf</span>().setAppName(<span class="string">"exacting day"</span>).setMaster(<span class="string">"local[4]"</span>)</span><br><span class="line"><span class="keyword">val</span> sc = <span class="keyword">new</span> <span class="type">SparkContext</span>(conf)</span><br><span class="line"><span class="keyword">val</span> reuslt : <span class="type">Array</span>[<span class="type">Tuple</span>[<span class="type">String</span>,<span class="type">Int</span>]] = sc.textFile(<span class="string">"./input/wc.txt"</span>).flatmap(_.split(<span class="string">" "</span>)).map(v=&gt;(v,<span class="number">1</span>)).reduceByKey(_+_).collect()</span><br><span class="line">println(result.mkstring(<span class="string">","</span>))</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>write-in-Typora </title>
    <url>/2020/04/29/write-in-Typora/</url>
    <content><![CDATA[<h3 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h3><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">println(<span class="string">"hello wolrd"</span>)</span><br></pre></td></tr></table></figure>

<p><img src="C:%5CUsers%5Ctree%5CDesktop%5Cgitpage-error.png" alt="hello"></p>
<hr>
<p><a href="https://baidu.com" target="_blank" rel="noopener">直达百度</a></p>
<a id="more"></a>

<p> <em>u</em></p>
<p><strong>U</strong></p>
<p><strong><em>u</em></strong></p>
<blockquote>
<p>凡是不能将我杀死的，必将使我强大</p>
</blockquote>
<p>user<br> <code>我现在</code>    </p>
<p><code>1.</code> first</p>
<p><code>2.</code> second</p>
<p><code>3.</code> third</p>
<p><code>4.</code> forth</p>
<ol>
<li>java</li>
<li>scala</li>
<li>spark</li>
<li>flink</li>
</ol>
<p><code>1.</code> 第一层</p>
<ol>
<li><p>第二层</p>
<p><code>1.</code> 嵌套</p>
<ol>
<li>再次嵌套</li>
</ol>
</li>
</ol>
<p><code>2.</code> 第二层</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>行内代码块测试：` System.out.println` </p>
<table>
<thead>
<tr>
<th align="center">商品</th>
<th align="center">数量</th>
<th align="center">单价</th>
</tr>
</thead>
<tbody><tr>
<td align="center">苹果</td>
<td align="center">10</td>
<td align="center">￥5</td>
</tr>
<tr>
<td align="center">电脑</td>
<td align="center">1</td>
<td align="center">￥8000</td>
</tr>
</tbody></table>
<h4 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h4><hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">st&#x3D;&gt;start: Start</span><br><span class="line">io&#x3D;&gt;inputoutput: 开始输入</span><br><span class="line">cond&#x3D;&gt;condition: 做出你的选择</span><br><span class="line">e&#x3D;&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;io-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;io</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>GitHub Pages使用过程中出现的一些问题</title>
    <url>/2020/04/29/GitHub-Pages%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>之前因为一些问题，我把GitHub Pages设置为private，今天重新公开但一直出现以下错误</p>
<blockquote>
<p>There isn’t GitHub Pages site here </p>
</blockquote>
<a id="more"></a>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在网上查阅了很多资料，原来是因为GitHub Pages中部分属性丢失，只需执行以下步骤即可：</p>
<ol>
<li>在Code模块添加README.md文件，随意内容即可</li>
<li>配置GitHub Pages主题，code-&gt;options-&gt;GitHub Pages-&gt;select theme，选择任意主题，编辑其在code模块中生成的<code>_config.yml</code>文件，添加以下属性：</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">title: Test title</span><br><span class="line">description: Test description</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>重新刷新浏览器，即可访问GitHub Pages网址！</li>
</ol>
]]></content>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>随笔</title>
    <url>/2020/05/16/%E9%9A%8F%E7%AC%94/</url>
    <content><![CDATA[<h3 id="实时计算之我见"><a href="#实时计算之我见" class="headerlink" title="实时计算之我见"></a>实时计算之我见</h3><p>最近新入职了一家公司，从事的大数据开发工作，偏向实时计算这一块，主要采用的技术还是JStorm！虽然之前可能不是很了解，但是有接触过Spark、Flink等实时计算框架，JStorm可以说是这些框架的前身了，因此学起来也感受良多，体会到了后者基于前者改进的原因！<br><br><br>作为实时计算框架，他们都有相同要处理的东西，比如从环境来说，因为实时计算是用来处理大数据量的，不可能在单机上运行，因此能够进行计算的前提条件是能够在多台机器上并发执行一个任务：底层交互环境应运而生。<br><br><br>从宏观上来讲，其实都是相类似的，就是在用户提交之前，你得先保证有一个具备足够资源(CPU、内存、磁盘以及网络等)的集群，他们一般采用的都是主从结构，即集群中有一个Master节点，以及若个slave节点。他们有着很明确的分工：master节点一般用来管理slave节点，负责监听整个就集群的资源变化过程！比如刚开始搭建一个环境，基于底层的通信机制，所有的slave节点都会想master节点发送注册信息，以便master节点管理和维护，同时也方便用户查看整个集群的资源状况；同时在一个给定时间内，slave节点会定期向master节点汇报当前的资源状态以及任务运行详情，方便master管理(WebUI展示)。<br><br><br>当有了运行环境之后，我们需要考虑的就是从用户提交单个任务以后，如何正确的在一个集群的不同机器上协调完成这个任务！而这种协同工作在实时计算中表现为将一个整体的计算任务划分为多个Task子任务，然后由不同的机器领取执行，进而达到为多机器并发执行的效果。但是，由于任务的性质不同，以Spark为例，它的算子可以作为各任务抽象化的结果。它存在宽窄依赖一说，所谓宽依赖，指的是在一条完整的任务链中，下一个任务需要等到上一个任务中的所有Task子任务全部执行完成，才得以进行，比如GroupByKey算子；窄依赖，则相反，它无需考虑上一任务的执行状态，当接收的数据发送过来，直接就可以进行计算，比如Map算子。因此，基于此种特性，新兴的流式框架都会对此进行改良，比如利用窄依赖性质，直接依据任务链性质，将相同窄依赖的任务放置在同一台机器上执行，这样可以有效减少任务之间的消息传输量，有效提高计算效率。而因为宽依赖的存在，需要考虑宽依赖上下两层算子间数据的传递，因此衍生出了多种类型的数据交流方式：shuffle、forward、round-robin等等。<br><br><br>此外，由于实时计算的特殊性，如果单纯的只考虑对实时数据进行实时处理，那样能够产生的效益是有限的，实时计算更多的用于对某一个时间段数据的综合分析，因此可能需要维护一定时间内的数据总量，即状态。状态是指指定时间内所有接受数据量的保存结果，它可以根据实时的数据进行一个动态的改变。当使用实时计算时，指标的反映结果更多是依据状态来进行的，比如你要一个周期内总的交易额，它就是用状态来实现的，它不仅会增加新增的数据，而且会删除过期的数据(窗口以外)。状态在实时计算中是一个非常重要的概念，同时与它密切相关的还有窗口。以Flink为例，按照它的流式价值观，他认为所有数据都是流，只不过实时的是·一条无届流，而离线的是有界流。窗口就相当于给无界流限定了一个区间，开始与结束，但是它会随着时间进行变化。依据不同的维度，可以划分不同的窗口，比如依据时间以及滚动策略，可以划分为时间滑动窗口、时间滑动窗口以及会话窗口；依据事件数量可以划分为事件滚动窗口和事件滑动窗口。<br><br></p>
]]></content>
  </entry>
  <entry>
    <title>自我审视</title>
    <url>/2020/05/16/%E8%87%AA%E6%88%91%E5%AE%A1%E8%A7%86/</url>
    <content><![CDATA[<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>可以说，本周四(14)号的培训的确给我带来了很多的思考，尤其是最后与田晓正天田总最后交流的阶段更是映象深刻！其实，从某种层面来说，这一天的学习，让我想起了曾经想做的事情，而且是一个前辈已经把它实现了！我感觉很震惊！<br><br><br>先讲讲企业文化吧，我感觉公司相对而言还是比较年轻化的，同时相对的规章制度也并不是那么死板，我是十分中意这种制度的。并且并不是一味的压榨员工的潜在价值，能够把员工的归属感当回事，我感觉这在众多互联网企业中本就少见，因此，我对公司的认同感十分之强烈！</p>
<a id="more"></a>
<br>
在第三个环节，是由人力资源部同事来进行主导的。当她说出那句你们一年总共读多少本书时，我觉得我们就已经输掉了！其实读书这件事情，可能还是不够重视吧，毕竟这种习惯是需要逐渐养成的！不得不说，读书的确是让人高效获取知识的有效途径，但是很多时候，都是没能够坚持下来，读着读着就放弃了！其实，只要你足够重视，慢慢的强迫自己去做，只要坚持1个月,2个月，3个月....渐渐地，这便会是你生活中不可或缺的一部分！当决定去读一本书时，希望你能去买一本实体书来看，而不是电子版，因为电子版相对来说并不容易让你沉下心来去思考背后的含义...读书的确是可以让人很快进步的！！！
<br>
明确你的职业规划！你未来想要达到怎样一个状态，要达到这种状态，你需要获得怎样的能力，怎样做才能让你获得这样的能力，以及具体到每一天可能需要作出的努力！当然，光制定计划是不行的，因为懒惰是人的共性，只有不断的突破自己的舒适圈，让自己一天天过的不那么舒服，你才能够学到更多的东西，技能！每天晚上想一想，你今天是否过的值？如果连续3天都是这样的状态，那么你应该要深刻反省，到底是哪里出问题了？
<br>
认识到每个人是不一样的，目标不同，要做的事情也就不一样！如果你已经认识到了自己的不足，但是依旧不打算去改变，那么当我没说，因为下一次碰到相同的问题，你依旧是选择逃避，以我不会，我不知道为由！人与人之间的差距就是这样产生的！杀不死我的，终将使我强大！说实话，最近感觉又有大学那种状态了，时间没有花在正确的事情上，放松可以，但是浪费时间不行！
<br>
你还有那么多想要拥有的东西啊，创作自己的音乐，街舞，写自己的系统，开源项目，博客，以及赚钱！慢慢的学会规划时间，不要再浪费时间了！那么多东西都学下来了，这不是一个短暂的过程，为什么不从这里面去汲取经验呢？战斗还没结束，为什么就想着解放？想想你的大厂梦？要做就做领域高精尖，玩游戏如此，工作亦是如此，加油吧少年！
]]></content>
  </entry>
</search>
